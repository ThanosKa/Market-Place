paths:
  /activities:
    get:
      summary: Get user activities
      description: Retrieves a list of activities for the authenticated user
      tags:
        - Activities
      security:
        - BearerAuth: []
      responses:
        "200":
          description: Successfully retrieved activities
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: integer
                    example: 1
                  message:
                    type: string
                    example: Activities retrieved successfully
                  data:
                    type: object
                    properties:
                      activities:
                        type: object
                        properties:
                          items:
                            type: array
                            items:
                              $ref: "#/components/schemas/Activity"
                          unseenCount:
                            type: integer
                            example: 5
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /activities/{id}/read:
    put:
      summary: Mark an activity as read
      description: Marks a specific activity as read for the authenticated user
      tags:
        - Activities
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successfully marked activity as read
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: integer
                    example: 1
                  message:
                    type: string
                    example: Activity marked as read
                  data:
                    type: object
                    properties:
                      activity:
                        $ref: "#/components/schemas/Activity"
        "404":
          description: Activity not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /activities/{id}:
    delete:
      summary: Delete an activity
      description: Deletes a specific activity for the authenticated user
      tags:
        - Activities
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successfully deleted activity
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: integer
                    example: 1
                  message:
                    type: string
                    example: Activity deleted successfully
                  data:
                    type: null
        "404":
          description: Activity not found or user doesn't have permission
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /activities/mark-all-read:
    put:
      summary: Mark all activities as read
      description: Marks all unread activities as read for the authenticated user
      tags:
        - Activities
      security:
        - BearerAuth: []
      responses:
        "200":
          description: Successfully marked all activities as read
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: integer
                    example: 1
                  message:
                    type: string
                    example: All activities marked as read
                  data:
                    type: object
                    properties:
                      modifiedCount:
                        type: integer
                        example: 5
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

components:
  schemas:
    Activity:
      type: object
      properties:
        _id:
          type: string
        user:
          type: string
        type:
          type: string
          enum: [message, product_like, profile_like, review]
        sender:
          $ref: "#/components/schemas/User"
        content:
          type: string
        product:
          $ref: "#/components/schemas/Product"
        read:
          type: boolean
        createdAt:
          type: string
          format: date-time

    User:
      type: object
      properties:
        _id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        profilePicture:
          type: string

    Product:
      type: object
      properties:
        _id:
          type: string
        title:
          type: string
        images:
          type: array
          items:
            type: string

    ErrorResponse:
      type: object
      properties:
        success:
          type: integer
          example: 0
        message:
          type: string
        data:
          type: null

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
