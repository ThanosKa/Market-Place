/api/chats:
  post:
    summary: Create a new chat
    tags:
      - Chats
    security:
      - BearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - participantId
            properties:
              participantId:
                type: string
    responses:
      "201":
        description: Chat created successfully
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChatResponse"
      "200":
        description: Chat already exists or restored
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChatResponse"
      "401":
        $ref: "#/components/responses/Unauthorized"
      "500":
        $ref: "#/components/responses/ServerError"

  get:
    summary: Get user's chats
    tags:
      - Chats
    security:
      - BearerAuth: []
    responses:
      "200":
        description: Chats retrieved successfully
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChatsListResponse"
      "401":
        $ref: "#/components/responses/Unauthorized"
      "500":
        $ref: "#/components/responses/ServerError"

/api/chats/{chatId}:
  get:
    summary: Get chat messages
    tags:
      - Chats
    security:
      - BearerAuth: []
    parameters:
      - in: path
        name: chatId
        required: true
        schema:
          type: string
      - in: query
        name: page
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
    responses:
      "200":
        description: Chat messages retrieved successfully
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChatMessagesResponse"
      "401":
        $ref: "#/components/responses/Unauthorized"
      "404":
        $ref: "#/components/responses/NotFound"
      "500":
        $ref: "#/components/responses/ServerError"

  delete:
    summary: Delete a chat
    tags:
      - Chats
    security:
      - BearerAuth: []
    parameters:
      - in: path
        name: chatId
        required: true
        schema:
          type: string
    responses:
      "200":
        description: Chat deleted successfully
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SuccessResponse"
      "401":
        $ref: "#/components/responses/Unauthorized"
      "404":
        $ref: "#/components/responses/NotFound"
      "500":
        $ref: "#/components/responses/ServerError"

/api/chats/{chatId}/messages:
  post:
    summary: Send a message
    tags:
      - Chats
    security:
      - BearerAuth: []
    parameters:
      - in: path
        name: chatId
        required: true
        schema:
          type: string
    requestBody:
      required: true
      content:
        multipart/form-data:
          schema:
            type: object
            properties:
              content:
                type: string
              images:
                type: array
                items:
                  type: string
                  format: binary
    responses:
      "200":
        description: Message sent successfully
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MessageResponse"
      "400":
        description: Bad request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ErrorResponse"
      "401":
        $ref: "#/components/responses/Unauthorized"
      "403":
        description: Forbidden
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ErrorResponse"
      "404":
        $ref: "#/components/responses/NotFound"
      "500":
        $ref: "#/components/responses/ServerError"

/api/chats/{chatId}/messages/{messageId}:
  put:
    summary: Edit a message
    tags:
      - Chats
    security:
      - BearerAuth: []
    parameters:
      - in: path
        name: chatId
        required: true
        schema:
          type: string
      - in: path
        name: messageId
        required: true
        schema:
          type: string
    requestBody:
      required: true
      content:
        multipart/form-data:
          schema:
            type: object
            properties:
              content:
                type: string
              images:
                type: array
                items:
                  type: string
                  format: binary
    responses:
      "200":
        description: Message edited successfully
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MessageResponse"
      "401":
        $ref: "#/components/responses/Unauthorized"
      "403":
        description: Forbidden or message too old to edit
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ErrorResponse"
      "404":
        description: Chat or message not found
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ErrorResponse"
      "500":
        $ref: "#/components/responses/ServerError"

  delete:
    summary: Delete a message
    tags:
      - Chats
    security:
      - BearerAuth: []
    parameters:
      - in: path
        name: chatId
        required: true
        schema:
          type: string
      - in: path
        name: messageId
        required: true
        schema:
          type: string
    responses:
      "200":
        description: Message deleted successfully
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SuccessResponse"
      "401":
        $ref: "#/components/responses/Unauthorized"
      "404":
        description: Chat or message not found
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ErrorResponse"
      "500":
        $ref: "#/components/responses/ServerError"

/api/chats/{chatId}/seen:
  post:
    summary: Mark messages as seen
    tags:
      - Chats
    security:
      - BearerAuth: []
    parameters:
      - in: path
        name: chatId
        required: true
        schema:
          type: string
    responses:
      "200":
        description: Messages marked as seen
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SuccessResponse"
      "401":
        $ref: "#/components/responses/Unauthorized"
      "404":
        $ref: "#/components/responses/NotFound"
      "500":
        $ref: "#/components/responses/ServerError"

/api/chats/unread-count:
  get:
    summary: Get unread chats count
    tags:
      - Chats
    security:
      - BearerAuth: []
    responses:
      "200":
        description: Unread chats count retrieved successfully
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UnreadChatsCountResponse"
      "401":
        $ref: "#/components/responses/Unauthorized"
      "500":
        $ref: "#/components/responses/ServerError"

components:
  schemas:
    Chat:
      type: object
      properties:
        _id:
          type: string
        otherParticipant:
          $ref: "#/components/schemas/User"
        lastMessage:
          $ref: "#/components/schemas/Message"
        unreadCount:
          type: number

    Message:
      type: object
      properties:
        _id:
          type: string
        content:
          type: string
        images:
          type: array
          items:
            type: string
        sender:
          $ref: "#/components/schemas/User"
        timestamp:
          type: string
          format: date-time
        seen:
          type: boolean
        edited:
          type: boolean
        isOwnMessage:
          type: boolean

    User:
      type: object
      properties:
        _id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        profilePicture:
          type: string

    ChatResponse:
      type: object
      properties:
        success:
          type: number
          enum: [1]
        message:
          type: string
        data:
          type: object
          properties:
            chat:
              $ref: "#/components/schemas/Chat"

    ChatsListResponse:
      type: object
      properties:
        success:
          type: number
          enum: [1]
        message:
          type: string
        data:
          type: object
          properties:
            chats:
              type: array
              items:
                $ref: "#/components/schemas/Chat"

    ChatMessagesResponse:
      type: object
      properties:
        success:
          type: number
          enum: [1]
        message:
          type: string
        data:
          type: object
          properties:
            _id:
              type: string
            otherParticipant:
              $ref: "#/components/schemas/User"
            messages:
              type: array
              items:
                $ref: "#/components/schemas/Message"
            currentPage:
              type: number
            totalPages:
              type: number
            hasNextPage:
              type: boolean
            hasPreviousPage:
              type: boolean

    MessageResponse:
      type: object
      properties:
        success:
          type: number
          enum: [1]
        message:
          type: string
        data:
          type: object
          properties:
            message:
              $ref: "#/components/schemas/Message"

    UnreadChatsCountResponse:
      type: object
      properties:
        success:
          type: number
          enum: [1]
        message:
          type: string
        data:
          type: object
          properties:
            unreadChatsCount:
              type: number

    SuccessResponse:
      type: object
      properties:
        success:
          type: number
          enum: [1]
        message:
          type: string
        data:
          type: null

    ErrorResponse:
      type: object
      properties:
        success:
          type: number
          enum: [0]
        message:
          type: string
        data:
          type: null

  responses:
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"

    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"

    ServerError:
      description: Server error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
