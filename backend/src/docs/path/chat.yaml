/api/chats:
  post:
    summary: Create a new chat
    tags:
      - Chats
    security:
      - BearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - participantId
            properties:
              participantId:
                type: string
    responses:
      "201":
        description: Chat created successfully
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChatResponse"
      "400":
        description: Chat already exists
      "401":
        description: Unauthorized
      "500":
        description: Server error

  get:
    summary: Get user's chats
    tags:
      - Chats
    security:
      - BearerAuth: []
    responses:
      "200":
        description: Chats retrieved successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: number
                message:
                  type: string
                data:
                  type: object
                  properties:
                    chats:
                      type: array
                      items:
                        $ref: "#/components/schemas/Chat"
      "401":
        description: Unauthorized
      "500":
        description: Server error

/api/chats/{chatId}:
  get:
    summary: Get chat messages
    tags:
      - Chats
    security:
      - BearerAuth: []
    parameters:
      - in: path
        name: chatId
        required: true
        schema:
          type: string
    responses:
      "200":
        description: Chat messages retrieved successfully
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChatResponse"
      "401":
        description: Unauthorized
      "404":
        description: Chat not found
      "500":
        description: Server error

/api/chats/{chatId}/messages:
  post:
    summary: Send a message
    tags:
      - Chats
    security:
      - BearerAuth: []
    parameters:
      - in: path
        name: chatId
        required: true
        schema:
          type: string
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - content
            properties:
              content:
                type: string
    responses:
      "200":
        description: Message sent successfully
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MessageResponse"
      "401":
        description: Unauthorized
      "404":
        description: Chat not found
      "500":
        description: Server error

/api/chats/{chatId}/messages/{messageId}:
  delete:
    summary: Delete a message
    tags:
      - Chats
    security:
      - BearerAuth: []
    parameters:
      - in: path
        name: chatId
        required: true
        schema:
          type: string
      - in: path
        name: messageId
        required: true
        schema:
          type: string
    responses:
      "200":
        description: Message deleted successfully
      "401":
        description: Unauthorized
      "404":
        description: Chat or message not found
      "500":
        description: Server error

/api/chats/{chatId}/seen:
  post:
    summary: Mark messages as seen
    tags:
      - Chats
    security:
      - BearerAuth: []
    parameters:
      - in: path
        name: chatId
        required: true
        schema:
          type: string
    responses:
      "200":
        description: Messages marked as seen
      "401":
        description: Unauthorized
      "404":
        description: Chat not found
      "500":
        description: Server error

components:
  schemas:
    Chat:
      type: object
      properties:
        _id:
          type: string
        participants:
          type: array
          items:
            $ref: "#/components/schemas/User"
        messages:
          type: array
          items:
            $ref: "#/components/schemas/Message"
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Message:
      type: object
      properties:
        _id:
          type: string
        sender:
          $ref: "#/components/schemas/User"
        content:
          type: string
        timestamp:
          type: string
          format: date-time
        seen:
          type: boolean

    User:
      type: object
      properties:
        _id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string

    ChatResponse:
      type: object
      properties:
        success:
          type: number
        message:
          type: string
        data:
          type: object
          properties:
            chat:
              $ref: "#/components/schemas/Chat"

    MessageResponse:
      type: object
      properties:
        success:
          type: number
        message:
          type: string
        data:
          type: object
          properties:
            message:
              $ref: "#/components/schemas/Message"

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
