paths:
  /chats:
    post:
      summary: Create a new chat
      tags:
        - Chats
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - participantId
              properties:
                participantId:
                  type: string
      responses:
        "201":
          description: Chat created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChatResponse"
        "200":
          description: Chat already exists
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChatResponse"
        "500":
          $ref: "#/components/responses/ServerError"

    get:
      summary: Get user's chats
      tags:
        - Chats
      security:
        - BearerAuth: []
      responses:
        "200":
          description: Chats retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: integer
                    enum: [1]
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      chats:
                        type: array
                        items:
                          $ref: "#/components/schemas/ChatPreview"
        "500":
          $ref: "#/components/responses/ServerError"

  /chats/{chatId}:
    get:
      summary: Get chat messages
      tags:
        - Chats
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: chatId
          required: true
          schema:
            type: string
        - in: query
          name: page
          schema:
            type: integer
            default: 1
        - in: query
          name: limit
          schema:
            type: integer
            default: 20
      responses:
        "200":
          description: Chat messages retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChatMessagesResponse"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/ServerError"

    delete:
      summary: Delete a chat
      tags:
        - Chats
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: chatId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Chat deleted successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/ServerError"

  /chats/{chatId}/messages:
    post:
      summary: Send a message
      tags:
        - Chats
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: chatId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                content:
                  type: string
                images:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        "200":
          description: Message sent successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Access denied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          $ref: "#/components/responses/ServerError"

  /chats/{chatId}/messages/{messageId}:
    put:
      summary: Edit a message
      tags:
        - Chats
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: chatId
          required: true
          schema:
            type: string
        - in: path
          name: messageId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                content:
                  type: string
                images:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        "200":
          description: Message edited successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
        "403":
          description: Not authorized to edit this message
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Chat or message not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          $ref: "#/components/responses/ServerError"

    delete:
      summary: Delete a message
      tags:
        - Chats
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: chatId
          required: true
          schema:
            type: string
        - in: path
          name: messageId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Message deleted successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "404":
          description: Chat or message not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          $ref: "#/components/responses/ServerError"

  /chats/{chatId}/seen:
    post:
      summary: Mark messages as seen
      tags:
        - Chats
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: chatId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Messages marked as seen
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/ServerError"

  /chats/unread-count:
    get:
      summary: Get unread chats count
      tags:
        - Chats
      security:
        - BearerAuth: []
      responses:
        "200":
          description: Unread chats count retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: integer
                    enum: [1]
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      unreadChatsCount:
                        type: integer
        "500":
          $ref: "#/components/responses/ServerError"

components:
  schemas:
    ChatPreview:
      type: object
      properties:
        _id:
          type: string
        otherParticipant:
          $ref: "#/components/schemas/User"
        lastMessage:
          type: object
          properties:
            _id:
              type: string
            content:
              type: string
            images:
              type: array
              items:
                type: string
            sender:
              type: string
            timestamp:
              type: string
              format: date-time
            seen:
              type: boolean
            isOwnMessage:
              type: boolean
        unreadCount:
          type: integer

    ChatMessagesResponse:
      type: object
      properties:
        success:
          type: integer
          enum: [1]
        message:
          type: string
        data:
          type: object
          properties:
            _id:
              type: string
            otherParticipant:
              $ref: "#/components/schemas/User"
            messages:
              type: array
              items:
                $ref: "#/components/schemas/Message"
            currentPage:
              type: integer
            totalPages:
              type: integer
            hasNextPage:
              type: boolean
            hasPreviousPage:
              type: boolean

    Message:
      type: object
      properties:
        _id:
          type: string
        content:
          type: string
        images:
          type: array
          items:
            type: string
        timestamp:
          type: string
          format: date-time
        seen:
          type: boolean
        edited:
          type: boolean
        isOwnMessage:
          type: boolean
        sender:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/User"

    User:
      type: object
      properties:
        _id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        profilePicture:
          type: string

    ChatResponse:
      type: object
      properties:
        success:
          type: integer
          enum: [1]
        message:
          type: string
        data:
          type: object
          properties:
            chat:
              $ref: "#/components/schemas/ChatPreview"

    MessageResponse:
      type: object
      properties:
        success:
          type: integer
          enum: [1]
        message:
          type: string
        data:
          type: object
          properties:
            message:
              $ref: "#/components/schemas/Message"

    SuccessResponse:
      type: object
      properties:
        success:
          type: integer
          enum: [1]
        message:
          type: string
        data:
          type: "null"

    ErrorResponse:
      type: object
      properties:
        success:
          type: integer
          enum: [0]
        message:
          type: string
        data:
          type: "null"

  responses:
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"

    ServerError:
      description: Server error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
