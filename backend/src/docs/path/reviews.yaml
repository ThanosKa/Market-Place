/api/reviews:
  post:
    summary: Create a new review
    tags:
      - Reviews
    security:
      - BearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - revieweeId
              - productId
              - rating
              - comment
            properties:
              revieweeId:
                type: string
              productId:
                type: string
              rating:
                type: number
                minimum: 1
                maximum: 5
              comment:
                type: string
    responses:
      "201":
        description: Review created successfully
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReviewResponse"
      "400":
        description: Bad request (e.g., self-review or duplicate review)
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ErrorResponse"
      "401":
        $ref: "#/components/responses/Unauthorized"
      "404":
        description: User to be reviewed or product not found
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ErrorResponse"
      "500":
        $ref: "#/components/responses/ServerError"

  get:
    summary: Get reviews for logged-in user
    tags:
      - Reviews
    security:
      - BearerAuth: []
    parameters:
      - in: query
        name: page
        schema:
          type: integer
        description: Page number for pagination
      - in: query
        name: limit
        schema:
          type: integer
        description: Number of items per page
    responses:
      "200":
        description: Reviews retrieved successfully
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReviewsListResponse"
      "401":
        $ref: "#/components/responses/Unauthorized"
      "500":
        $ref: "#/components/responses/ServerError"

/api/reviews/{reviewId}:
  put:
    summary: Update a review
    tags:
      - Reviews
    security:
      - BearerAuth: []
    parameters:
      - in: path
        name: reviewId
        required: true
        schema:
          type: string
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - rating
              - comment
            properties:
              rating:
                type: number
                minimum: 1
                maximum: 5
              comment:
                type: string
    responses:
      "200":
        description: Review updated successfully
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReviewResponse"
      "401":
        $ref: "#/components/responses/Unauthorized"
      "403":
        description: Forbidden (not the review owner)
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ErrorResponse"
      "404":
        description: Review not found
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ErrorResponse"
      "500":
        $ref: "#/components/responses/ServerError"

  delete:
    summary: Delete a review
    tags:
      - Reviews
    security:
      - BearerAuth: []
    parameters:
      - in: path
        name: reviewId
        required: true
        schema:
          type: string
    responses:
      "200":
        description: Review deleted successfully
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SuccessResponse"
      "401":
        $ref: "#/components/responses/Unauthorized"
      "403":
        description: Forbidden (not the review owner)
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ErrorResponse"
      "404":
        description: Review not found
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ErrorResponse"
      "500":
        $ref: "#/components/responses/ServerError"

/api/reviews/user/{userId}:
  get:
    summary: Get reviews for a specific user
    tags:
      - Reviews
    parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: string
      - in: query
        name: page
        schema:
          type: integer
        description: Page number for pagination
      - in: query
        name: limit
        schema:
          type: integer
        description: Number of items per page
    responses:
      "200":
        description: Reviews retrieved successfully
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReviewsListResponse"
      "500":
        $ref: "#/components/responses/ServerError"

/api/reviews/done-by/{userId}:
  get:
    summary: Get reviews done by a specific user
    tags:
      - Reviews
    parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: string
      - in: query
        name: page
        schema:
          type: integer
        description: Page number for pagination
      - in: query
        name: limit
        schema:
          type: integer
        description: Number of items per page
    responses:
      "200":
        description: Reviews retrieved successfully
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReviewsListResponse"
      "500":
        $ref: "#/components/responses/ServerError"

components:
  schemas:
    Review:
      type: object
      properties:
        _id:
          type: string
        reviewer:
          $ref: "#/components/schemas/User"
        reviewee:
          type: string
        product:
          $ref: "#/components/schemas/Product"
        rating:
          type: number
          minimum: 1
          maximum: 5
        comment:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    ReviewResponse:
      type: object
      properties:
        success:
          type: number
          enum: [1]
        message:
          type: string
        data:
          type: object
          properties:
            review:
              $ref: "#/components/schemas/Review"

    ReviewsListResponse:
      type: object
      properties:
        success:
          type: number
          enum: [1]
        message:
          type: string
        data:
          type: object
          properties:
            reviews:
              type: array
              items:
                $ref: "#/components/schemas/Review"
            page:
              type: integer
            limit:
              type: integer
            totalReviews:
              type: integer
            totalPages:
              type: integer

    User:
      type: object
      properties:
        _id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        username:
          type: string
        profilePicture:
          type: string

    Product:
      type: object
      properties:
        _id:
          type: string
        title:
          type: string
        images:
          type: array
          items:
            type: string

    ErrorResponse:
      type: object
      properties:
        success:
          type: number
          enum: [0]
        message:
          type: string
        data:
          type: null

    SuccessResponse:
      type: object
      properties:
        success:
          type: number
          enum: [1]
        message:
          type: string
        data:
          type: null

  responses:
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"

    ServerError:
      description: Server error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
