/api/reviews:
  post:
    summary: Create a new review
    tags:
      - Reviews
    security:
      - BearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - revieweeId
              - rating
              - comment
            properties:
              revieweeId:
                type: string
              rating:
                type: number
              comment:
                type: string
    responses:
      "201":
        description: Review created successfully
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReviewResponse"
      "400":
        description: Bad request (e.g., self-review or duplicate review)
      "401":
        description: Unauthorized
      "404":
        description: User to be reviewed not found
      "500":
        description: Server error

/api/reviews/{reviewId}:
  put:
    summary: Update a review
    tags:
      - Reviews
    security:
      - BearerAuth: []
    parameters:
      - in: path
        name: reviewId
        required: true
        schema:
          type: string
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - rating
              - comment
            properties:
              rating:
                type: number
              comment:
                type: string
    responses:
      "200":
        description: Review updated successfully
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReviewResponse"
      "401":
        description: Unauthorized
      "403":
        description: Forbidden (not the review owner)
      "404":
        description: Review not found
      "500":
        description: Server error

  delete:
    summary: Delete a review
    tags:
      - Reviews
    security:
      - BearerAuth: []
    parameters:
      - in: path
        name: reviewId
        required: true
        schema:
          type: string
    responses:
      "200":
        description: Review deleted successfully
      "401":
        description: Unauthorized
      "403":
        description: Forbidden (not the review owner)
      "404":
        description: Review not found
      "500":
        description: Server error

/api/reviews/user/{userId}:
  get:
    summary: Get reviews for a user
    tags:
      - Reviews
    parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: string
    responses:
      "200":
        description: Reviews retrieved successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: number
                message:
                  type: string
                data:
                  type: object
                  properties:
                    reviews:
                      type: array
                      items:
                        $ref: "#/components/schemas/Review"
      "500":
        description: Server error

/api/reviews/user/{userId}/myreview:
  get:
    summary: Get current user's review for a specific user
    tags:
      - Reviews
    security:
      - BearerAuth: []
    parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: string
    responses:
      "200":
        description: Review retrieved successfully
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReviewResponse"
      "401":
        description: Unauthorized
      "404":
        description: Review not found
      "500":
        description: Server error

components:
  schemas:
    Review:
      type: object
      properties:
        _id:
          type: string
        reviewer:
          $ref: "#/components/schemas/User"
        reviewee:
          type: string
        rating:
          type: number
        comment:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    ReviewResponse:
      type: object
      properties:
        success:
          type: number
        message:
          type: string
        data:
          type: object
          properties:
            review:
              $ref: "#/components/schemas/Review"

    User:
      type: object
      properties:
        _id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        profilePicture:
          type: string

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
