/api/users:
  get:
    summary: Get all users
    tags:
      - Users
    security:
      - BearerAuth: []
    responses:
      "200":
        description: Users retrieved successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: number
                message:
                  type: string
                data:
                  type: object
                  properties:
                    users:
                      type: array
                      items:
                        $ref: "#/components/schemas/User"
      "401":
        description: Unauthorized
      "500":
        description: Server error

/api/users/{id}:
  get:
    summary: Get user by ID
    tags:
      - Users
    security:
      - BearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
    responses:
      "200":
        description: User retrieved successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: number
                message:
                  type: string
                data:
                  type: object
                  properties:
                    user:
                      $ref: "#/components/schemas/User"
      "401":
        description: Unauthorized
      "404":
        description: User not found
      "500":
        description: Server error

  put:
    summary: Edit user
    tags:
      - Users
    security:
      - BearerAuth: []
    requestBody:
      content:
        multipart/form-data:
          schema:
            type: object
            properties:
              email:
                type: string
              firstName:
                type: string
              lastName:
                type: string
              bio:
                type: string
              newPassword:
                type: string
              confirmNewPassword:
                type: string
              profilePicture:
                type: string
                format: binary
    responses:
      "200":
        description: User updated successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: number
                message:
                  type: string
                data:
                  type: object
                  properties:
                    user:
                      $ref: "#/components/schemas/User"
      "400":
        description: Bad request
      "401":
        description: Unauthorized
      "404":
        description: User not found
      "500":
        description: Server error

  delete:
    summary: Delete user
    tags:
      - Users
    security:
      - BearerAuth: []
    responses:
      "200":
        description: User deleted successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: number
                message:
                  type: string
                data:
                  type: object
      "401":
        description: Unauthorized
      "404":
        description: User not found
      "500":
        description: Server error

components:
  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        bio:
          type: string
        profilePicture:
          type: string
        products:
          type: array
          items:
            $ref: "#/components/schemas/Product"
        likedProducts:
          type: array
          items:
            $ref: "#/components/schemas/Product"
    Product:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        description:
          type: string
        price:
          type: number
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
