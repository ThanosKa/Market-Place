paths:
  /api/users:
    get:
      summary: Get all users
      tags:
        - Users
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
      responses:
        "200":
          description: Users retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UsersResponse"
        "500":
          $ref: "#/components/responses/ServerError"

    put:
      summary: Edit user
      tags:
        - Users
      security:
        - BearerAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/UserEditRequest"
      responses:
        "200":
          description: User updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserEditResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/ServerError"

    delete:
      summary: Delete user
      tags:
        - Users
      security:
        - BearerAuth: []
      responses:
        "200":
          $ref: "#/components/responses/SuccessResponse"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/ServerError"

  /api/users/profile-picture:
    delete:
      summary: Remove profile picture
      tags:
        - Users
      security:
        - BearerAuth: []
      responses:
        "200":
          description: Profile picture removed successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProfilePictureResponse"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/ServerError"

  /api/users/details:
    get:
      summary: Get user details
      tags:
        - Users
      security:
        - BearerAuth: []
      responses:
        "200":
          description: User details retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDetailsResponse"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/ServerError"

  /api/users/{id}:
    get:
      summary: Get user by ID
      tags:
        - Users
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: User retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDetailsResponse"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/ServerError"

  /api/users/all:
    get:
      summary: Get all users info
      tags:
        - Users
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
        - in: query
          name: search
          schema:
            type: string
      responses:
        "200":
          description: Users info retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AllUsersInfoResponse"
        "500":
          $ref: "#/components/responses/ServerError"

components:
  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        bio:
          type: string
        profilePicture:
          type: string
        averageRating:
          type: number
        reviewCount:
          type: number
        createdAt:
          type: string
          format: date-time

    UserEditRequest:
      type: object
      properties:
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        bio:
          type: string
        currentPassword:
          type: string
        newPassword:
          type: string
        confirmNewPassword:
          type: string
        removeProfilePicture:
          type: string
        profilePicture:
          type: string
          format: binary

    UsersResponse:
      type: object
      properties:
        success:
          type: integer
          enum: [1]
        message:
          type: string
        data:
          type: object
          properties:
            users:
              type: array
              items:
                $ref: "#/components/schemas/User"
            total:
              type: integer
            page:
              type: integer
            limit:
              type: integer

    UserDetailsResponse:
      type: object
      properties:
        success:
          type: integer
          enum: [1]
        message:
          type: string
        data:
          type: object
          properties:
            user:
              $ref: "#/components/schemas/User"
            totalProducts:
              type: integer
            totalLikes:
              type: integer

    UserEditResponse:
      type: object
      properties:
        success:
          type: integer
          enum: [1]
        message:
          type: string
        data:
          type: object
          properties:
            user:
              type: object
              properties:
                id:
                  type: string
                email:
                  type: string
                firstName:
                  type: string
                lastName:
                  type: string
                bio:
                  type: string
                profilePicture:
                  type: string

    ProfilePictureResponse:
      type: object
      properties:
        success:
          type: integer
          enum: [1]
        message:
          type: string
        data:
          type: object
          properties:
            user:
              type: object
              properties:
                id:
                  type: string
                profilePicture:
                  type: string

    AllUsersInfoResponse:
      type: object
      properties:
        success:
          type: integer
          enum: [1]
        message:
          type: string
        data:
          type: object
          properties:
            users:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                  email:
                    type: string
                  firstName:
                    type: string
                  lastName:
                    type: string
                  profilePicture:
                    type: string
                  bio:
                    type: string
                  reviewCount:
                    type: integer
                  averageRating:
                    type: number
                  totalProducts:
                    type: integer
                  totalLikes:
                    type: integer
            total:
              type: integer
            page:
              type: integer
            limit:
              type: integer

    ErrorResponse:
      type: object
      properties:
        success:
          type: integer
          enum: [0]
        message:
          type: string
        data:
          type: null

    SuccessResponse:
      type: object
      properties:
        success:
          type: integer
          enum: [1]
        message:
          type: string
        data:
          type: null

  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    ServerError:
      description: Server error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
